// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: keyservice.proto

package keyservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to KeyType:
	//
	//	*Key_KmsKey
	//	*Key_PgpKey
	//	*Key_GcpKmsKey
	//	*Key_AzureKeyvaultKey
	//	*Key_VaultKey
	//	*Key_AgeKey
	KeyType       isKey_KeyType `protobuf_oneof:"key_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_keyservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetKeyType() isKey_KeyType {
	if x != nil {
		return x.KeyType
	}
	return nil
}

func (x *Key) GetKmsKey() *KmsKey {
	if x != nil {
		if x, ok := x.KeyType.(*Key_KmsKey); ok {
			return x.KmsKey
		}
	}
	return nil
}

func (x *Key) GetPgpKey() *PgpKey {
	if x != nil {
		if x, ok := x.KeyType.(*Key_PgpKey); ok {
			return x.PgpKey
		}
	}
	return nil
}

func (x *Key) GetGcpKmsKey() *GcpKmsKey {
	if x != nil {
		if x, ok := x.KeyType.(*Key_GcpKmsKey); ok {
			return x.GcpKmsKey
		}
	}
	return nil
}

func (x *Key) GetAzureKeyvaultKey() *AzureKeyVaultKey {
	if x != nil {
		if x, ok := x.KeyType.(*Key_AzureKeyvaultKey); ok {
			return x.AzureKeyvaultKey
		}
	}
	return nil
}

func (x *Key) GetVaultKey() *VaultKey {
	if x != nil {
		if x, ok := x.KeyType.(*Key_VaultKey); ok {
			return x.VaultKey
		}
	}
	return nil
}

func (x *Key) GetAgeKey() *AgeKey {
	if x != nil {
		if x, ok := x.KeyType.(*Key_AgeKey); ok {
			return x.AgeKey
		}
	}
	return nil
}

type isKey_KeyType interface {
	isKey_KeyType()
}

type Key_KmsKey struct {
	KmsKey *KmsKey `protobuf:"bytes,1,opt,name=kms_key,json=kmsKey,proto3,oneof"`
}

type Key_PgpKey struct {
	PgpKey *PgpKey `protobuf:"bytes,2,opt,name=pgp_key,json=pgpKey,proto3,oneof"`
}

type Key_GcpKmsKey struct {
	GcpKmsKey *GcpKmsKey `protobuf:"bytes,3,opt,name=gcp_kms_key,json=gcpKmsKey,proto3,oneof"`
}

type Key_AzureKeyvaultKey struct {
	AzureKeyvaultKey *AzureKeyVaultKey `protobuf:"bytes,4,opt,name=azure_keyvault_key,json=azureKeyvaultKey,proto3,oneof"`
}

type Key_VaultKey struct {
	VaultKey *VaultKey `protobuf:"bytes,5,opt,name=vault_key,json=vaultKey,proto3,oneof"`
}

type Key_AgeKey struct {
	AgeKey *AgeKey `protobuf:"bytes,6,opt,name=age_key,json=ageKey,proto3,oneof"`
}

func (*Key_KmsKey) isKey_KeyType() {}

func (*Key_PgpKey) isKey_KeyType() {}

func (*Key_GcpKmsKey) isKey_KeyType() {}

func (*Key_AzureKeyvaultKey) isKey_KeyType() {}

func (*Key_VaultKey) isKey_KeyType() {}

func (*Key_AgeKey) isKey_KeyType() {}

type PgpKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fingerprint   string                 `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PgpKey) Reset() {
	*x = PgpKey{}
	mi := &file_keyservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PgpKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgpKey) ProtoMessage() {}

func (x *PgpKey) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgpKey.ProtoReflect.Descriptor instead.
func (*PgpKey) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{1}
}

func (x *PgpKey) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

type KmsKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Arn           string                 `protobuf:"bytes,1,opt,name=arn,proto3" json:"arn,omitempty"`
	Role          string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Context       map[string]string      `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AwsProfile    string                 `protobuf:"bytes,4,opt,name=aws_profile,json=awsProfile,proto3" json:"aws_profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KmsKey) Reset() {
	*x = KmsKey{}
	mi := &file_keyservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KmsKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KmsKey) ProtoMessage() {}

func (x *KmsKey) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KmsKey.ProtoReflect.Descriptor instead.
func (*KmsKey) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{2}
}

func (x *KmsKey) GetArn() string {
	if x != nil {
		return x.Arn
	}
	return ""
}

func (x *KmsKey) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *KmsKey) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *KmsKey) GetAwsProfile() string {
	if x != nil {
		return x.AwsProfile
	}
	return ""
}

type GcpKmsKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceId    string                 `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GcpKmsKey) Reset() {
	*x = GcpKmsKey{}
	mi := &file_keyservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpKmsKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpKmsKey) ProtoMessage() {}

func (x *GcpKmsKey) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpKmsKey.ProtoReflect.Descriptor instead.
func (*GcpKmsKey) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{3}
}

func (x *GcpKmsKey) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type VaultKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VaultAddress  string                 `protobuf:"bytes,1,opt,name=vault_address,json=vaultAddress,proto3" json:"vault_address,omitempty"`
	EnginePath    string                 `protobuf:"bytes,2,opt,name=engine_path,json=enginePath,proto3" json:"engine_path,omitempty"`
	KeyName       string                 `protobuf:"bytes,3,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VaultKey) Reset() {
	*x = VaultKey{}
	mi := &file_keyservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VaultKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultKey) ProtoMessage() {}

func (x *VaultKey) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultKey.ProtoReflect.Descriptor instead.
func (*VaultKey) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{4}
}

func (x *VaultKey) GetVaultAddress() string {
	if x != nil {
		return x.VaultAddress
	}
	return ""
}

func (x *VaultKey) GetEnginePath() string {
	if x != nil {
		return x.EnginePath
	}
	return ""
}

func (x *VaultKey) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

type AzureKeyVaultKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VaultUrl      string                 `protobuf:"bytes,1,opt,name=vault_url,json=vaultUrl,proto3" json:"vault_url,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AzureKeyVaultKey) Reset() {
	*x = AzureKeyVaultKey{}
	mi := &file_keyservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureKeyVaultKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureKeyVaultKey) ProtoMessage() {}

func (x *AzureKeyVaultKey) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureKeyVaultKey.ProtoReflect.Descriptor instead.
func (*AzureKeyVaultKey) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{5}
}

func (x *AzureKeyVaultKey) GetVaultUrl() string {
	if x != nil {
		return x.VaultUrl
	}
	return ""
}

func (x *AzureKeyVaultKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AzureKeyVaultKey) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type AgeKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipient     string                 `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgeKey) Reset() {
	*x = AgeKey{}
	mi := &file_keyservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgeKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgeKey) ProtoMessage() {}

func (x *AgeKey) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgeKey.ProtoReflect.Descriptor instead.
func (*AgeKey) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{6}
}

func (x *AgeKey) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

type EncryptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Plaintext     []byte                 `protobuf:"bytes,2,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptRequest) Reset() {
	*x = EncryptRequest{}
	mi := &file_keyservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRequest) ProtoMessage() {}

func (x *EncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRequest.ProtoReflect.Descriptor instead.
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{7}
}

func (x *EncryptRequest) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *EncryptRequest) GetPlaintext() []byte {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type EncryptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ciphertext    []byte                 `protobuf:"bytes,1,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptResponse) Reset() {
	*x = EncryptResponse{}
	mi := &file_keyservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptResponse) ProtoMessage() {}

func (x *EncryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptResponse.ProtoReflect.Descriptor instead.
func (*EncryptResponse) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{8}
}

func (x *EncryptResponse) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type DecryptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *Key                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Ciphertext    []byte                 `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecryptRequest) Reset() {
	*x = DecryptRequest{}
	mi := &file_keyservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRequest) ProtoMessage() {}

func (x *DecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRequest.ProtoReflect.Descriptor instead.
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{9}
}

func (x *DecryptRequest) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DecryptRequest) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type DecryptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plaintext     []byte                 `protobuf:"bytes,1,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecryptResponse) Reset() {
	*x = DecryptResponse{}
	mi := &file_keyservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptResponse) ProtoMessage() {}

func (x *DecryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keyservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptResponse.ProtoReflect.Descriptor instead.
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return file_keyservice_proto_rawDescGZIP(), []int{10}
}

func (x *DecryptResponse) GetPlaintext() []byte {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

var File_keyservice_proto protoreflect.FileDescriptor

const file_keyservice_proto_rawDesc = "" +
	"\n" +
	"\x10keyservice.proto\"\x98\x02\n" +
	"\x03Key\x12\"\n" +
	"\akms_key\x18\x01 \x01(\v2\a.KmsKeyH\x00R\x06kmsKey\x12\"\n" +
	"\apgp_key\x18\x02 \x01(\v2\a.PgpKeyH\x00R\x06pgpKey\x12,\n" +
	"\vgcp_kms_key\x18\x03 \x01(\v2\n" +
	".GcpKmsKeyH\x00R\tgcpKmsKey\x12A\n" +
	"\x12azure_keyvault_key\x18\x04 \x01(\v2\x11.AzureKeyVaultKeyH\x00R\x10azureKeyvaultKey\x12(\n" +
	"\tvault_key\x18\x05 \x01(\v2\t.VaultKeyH\x00R\bvaultKey\x12\"\n" +
	"\aage_key\x18\x06 \x01(\v2\a.AgeKeyH\x00R\x06ageKeyB\n" +
	"\n" +
	"\bkey_type\"*\n" +
	"\x06PgpKey\x12 \n" +
	"\vfingerprint\x18\x01 \x01(\tR\vfingerprint\"\xbb\x01\n" +
	"\x06KmsKey\x12\x10\n" +
	"\x03arn\x18\x01 \x01(\tR\x03arn\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12.\n" +
	"\acontext\x18\x03 \x03(\v2\x14.KmsKey.ContextEntryR\acontext\x12\x1f\n" +
	"\vaws_profile\x18\x04 \x01(\tR\n" +
	"awsProfile\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\tGcpKmsKey\x12\x1f\n" +
	"\vresource_id\x18\x01 \x01(\tR\n" +
	"resourceId\"k\n" +
	"\bVaultKey\x12#\n" +
	"\rvault_address\x18\x01 \x01(\tR\fvaultAddress\x12\x1f\n" +
	"\vengine_path\x18\x02 \x01(\tR\n" +
	"enginePath\x12\x19\n" +
	"\bkey_name\x18\x03 \x01(\tR\akeyName\"]\n" +
	"\x10AzureKeyVaultKey\x12\x1b\n" +
	"\tvault_url\x18\x01 \x01(\tR\bvaultUrl\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"&\n" +
	"\x06AgeKey\x12\x1c\n" +
	"\trecipient\x18\x01 \x01(\tR\trecipient\"F\n" +
	"\x0eEncryptRequest\x12\x16\n" +
	"\x03key\x18\x01 \x01(\v2\x04.KeyR\x03key\x12\x1c\n" +
	"\tplaintext\x18\x02 \x01(\fR\tplaintext\"1\n" +
	"\x0fEncryptResponse\x12\x1e\n" +
	"\n" +
	"ciphertext\x18\x01 \x01(\fR\n" +
	"ciphertext\"H\n" +
	"\x0eDecryptRequest\x12\x16\n" +
	"\x03key\x18\x01 \x01(\v2\x04.KeyR\x03key\x12\x1e\n" +
	"\n" +
	"ciphertext\x18\x02 \x01(\fR\n" +
	"ciphertext\"/\n" +
	"\x0fDecryptResponse\x12\x1c\n" +
	"\tplaintext\x18\x01 \x01(\fR\tplaintext2l\n" +
	"\n" +
	"KeyService\x12.\n" +
	"\aEncrypt\x12\x0f.EncryptRequest\x1a\x10.EncryptResponse\"\x00\x12.\n" +
	"\aDecrypt\x12\x0f.DecryptRequest\x1a\x10.DecryptResponse\"\x00B\x18Z\x16win-secrets/keyserviceb\x06proto3"

var (
	file_keyservice_proto_rawDescOnce sync.Once
	file_keyservice_proto_rawDescData []byte
)

func file_keyservice_proto_rawDescGZIP() []byte {
	file_keyservice_proto_rawDescOnce.Do(func() {
		file_keyservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_keyservice_proto_rawDesc), len(file_keyservice_proto_rawDesc)))
	})
	return file_keyservice_proto_rawDescData
}

var file_keyservice_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_keyservice_proto_goTypes = []any{
	(*Key)(nil),              // 0: Key
	(*PgpKey)(nil),           // 1: PgpKey
	(*KmsKey)(nil),           // 2: KmsKey
	(*GcpKmsKey)(nil),        // 3: GcpKmsKey
	(*VaultKey)(nil),         // 4: VaultKey
	(*AzureKeyVaultKey)(nil), // 5: AzureKeyVaultKey
	(*AgeKey)(nil),           // 6: AgeKey
	(*EncryptRequest)(nil),   // 7: EncryptRequest
	(*EncryptResponse)(nil),  // 8: EncryptResponse
	(*DecryptRequest)(nil),   // 9: DecryptRequest
	(*DecryptResponse)(nil),  // 10: DecryptResponse
	nil,                      // 11: KmsKey.ContextEntry
}
var file_keyservice_proto_depIdxs = []int32{
	2,  // 0: Key.kms_key:type_name -> KmsKey
	1,  // 1: Key.pgp_key:type_name -> PgpKey
	3,  // 2: Key.gcp_kms_key:type_name -> GcpKmsKey
	5,  // 3: Key.azure_keyvault_key:type_name -> AzureKeyVaultKey
	4,  // 4: Key.vault_key:type_name -> VaultKey
	6,  // 5: Key.age_key:type_name -> AgeKey
	11, // 6: KmsKey.context:type_name -> KmsKey.ContextEntry
	0,  // 7: EncryptRequest.key:type_name -> Key
	0,  // 8: DecryptRequest.key:type_name -> Key
	7,  // 9: KeyService.Encrypt:input_type -> EncryptRequest
	9,  // 10: KeyService.Decrypt:input_type -> DecryptRequest
	8,  // 11: KeyService.Encrypt:output_type -> EncryptResponse
	10, // 12: KeyService.Decrypt:output_type -> DecryptResponse
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_keyservice_proto_init() }
func file_keyservice_proto_init() {
	if File_keyservice_proto != nil {
		return
	}
	file_keyservice_proto_msgTypes[0].OneofWrappers = []any{
		(*Key_KmsKey)(nil),
		(*Key_PgpKey)(nil),
		(*Key_GcpKmsKey)(nil),
		(*Key_AzureKeyvaultKey)(nil),
		(*Key_VaultKey)(nil),
		(*Key_AgeKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_keyservice_proto_rawDesc), len(file_keyservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_keyservice_proto_goTypes,
		DependencyIndexes: file_keyservice_proto_depIdxs,
		MessageInfos:      file_keyservice_proto_msgTypes,
	}.Build()
	File_keyservice_proto = out.File
	file_keyservice_proto_goTypes = nil
	file_keyservice_proto_depIdxs = nil
}
